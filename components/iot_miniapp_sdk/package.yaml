
## 第一部分： 基础信息
name: iot_miniapp_sdk                                 # <必选项> 包名称 （符合C语言变量命名规则），长度少于等于64字节
version: v8.0.0                                 # <必选项> 组件版本号
description: the libs and resources for iotminiapp # <必选项> 建议至少20字以上
type: common                                     # <必选项> 组件类型，为：solution, chip, board, common, sdk

## 第四部分：编译连接信息
# build_config:                            # <可选项> 编译配置项
#   include:                               # <可选项> 编译时，影响编译器的-I 参数 ,全局有效
#     - src                                #        include 只能是该软件包下的目录，不能使用外部目录
#   internal_include:                      # <可选项> 编译时，影响编译器的-I 参数 ,组件内有效
#     - include
#   cflag: ''                              # <可选项> C 编译器所需要要的编译参数
#   cxxflag: ''                            # <可选项> CXX 编译器所需要要的编译参数
#   asmflag: ''                            # <可选项> 汇编器所需要要参数
#   define:                                # <可选项> 宏定义, 增加编译器的-D 选项,如：
#     XXX: 1                               #   -DXXX=1
#     AAA: 1                               #   -DAAA
#     STR: "abc"                           #   -DSTR="abc"
#   libs:                                  # 该组件中支持的二进制静态库,如：libxxx.a, libyyy.a
#     - xxx                                #   -lxxx
#     - yyy                                #   -lyyy
#   libpath:                               # 指定静态库所在的路径（相对于该组件路径）
#     - libs                               #   -Llibs
build_config:
  cxxflag: '-fno-rtti'
  include:
    - include
    - include/jqutil_v2
    - jsapi/include
  libs:                                  # 该组件中支持的二进制静态库,如：libxxx.a, libyyy.a
    - falcon_entry
    - jquick_falcon                            #   -lxxx
    - jquick_core                              #   -lyyy
    - jsapi_fs
    - jsapi_file
    - JQuickCommon
    - JQuickBase
    - JQuickPort
    - greenui
    - greenuix
    - expat
    - skia
    - png
    - quickjs
    - ft2
    - jpeg
    - qrencode
    - json-jquick
    - wm
    - jquick_falcon_extend
    - JQuickUtils
    - yoga
    - jsapi_proxy
    - jquick_debug
    - pms
    - systemui
     #- message_knife                                 # 该组件中支持的二进制静态库,如：libxxx.a, libyyy.a
  libpath:                               # 指定静态库所在的路径（相对于该组件路径）
    - lib/<cpu>

# source_file:                             # <可选项> 指定参与编译的源代码文件，支持通配符，采用相对路径
#   - src/*.c                              # 例：组件 src 目录下所有的扩展名为 c 的源代码文件
source_file:
  - src/*.c 
  - jsapi/jsapi_wifi/*.cpp
  - jsapi/jsapi_hello/*.cpp
  - jsapi/jsapi_http/*.cpp
  - jsapi/jsapi_power/*.cpp
  - jsapi/jsapi_screen/*.cpp
  - jsapi/jsapi_system_kv/*.cpp
  - jsapi/jsapi_voice/*.cpp ? <CONFIG_COMP_VOICE_WRAPPER>
  - jsapi/jsapi_smartaudio/*.cpp
  - jsapi/jsapi_fota/*.cpp
  - jsapi/jsapi_gateway/*.cpp ? <CONFIG_BT_MESH>

def_config:
  CONFIG_IOT_MINIAPP_SDK: 1
