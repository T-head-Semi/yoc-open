
## 第一部分： 基础信息
name: amrwb                                         # <必选项> 包名称 （符合C语言变量命名规则），长度少于等于64字节
version: v7.9.0                                    # <必选项> 组件版本号
description: 自适应多速率宽带语音编码 AMR-WB(Adaptive Multi-RateWideband Speech Codec) # <必选项> 建议至少20字以上
type: common                                        # <必选项> 组件类型，为：solution, chip, board, common, sdk
tag: 多媒体播放器                                   # <可选项> 组件分类，缺省值： ''
keywords:                                           # <可选项> 标签，会影响到组件被搜索的效果，合理的标签很重要
  - amrwb
  - audio decoder & encoder
  - media
license: APACHE                                     # <可选项> 源代码的许可证，要确保所有代码、文件的许可证不冲突。如：MIT，Apache license v2.0，BSD

## 第二部分：依赖信息
#           指定该组件依赖的组件及版本
# sdk_chip:                                # <可选项> 该组件依赖sdk组件，合理的依赖才能保证组件能编译、使用
#   - sdk_chip_csky_dummy: v7.4.0
#   - sdk_chip_riscv_dummy: v7.4.0
# depends:                                 # <可选项> 该组件依赖其他的组件，合理的依赖才能保证组件能编译、使用
#   - minilibc: v7.4.0
#   - aos: v7.4.0

## 第四部分：编译连接信息
# build_config:                            # <可选项> 编译配置项
#   include:                               # <可选项> 编译时，影响编译器的-I 参数 ,全局有效
#     - src                                #        include 只能是该软件包下的目录，不能使用外部目录
#   internal_include:                      # <可选项> 编译时，影响编译器的-I 参数 ,组件内有效
#     - include
#   cflag: ''                              # <可选项> C 编译器所需要要的编译参数
#   cxxflag: ''                            # <可选项> CXX 编译器所需要要的编译参数
#   asmflag: ''                            # <可选项> 汇编器所需要要参数
#   define:                                # <可选项> 宏定义, 增加编译器的-D 选项,如：
#     XXX: 1                               #   -DXXX=1
#     AAA: 1                               #   -DAAA
#     STR: "abc"                           #   -DSTR="abc"
#   libs:                                  # 该组件中支持的二进制静态库,如：libxxx.a, libyyy.a
#     - xxx                                #   -lxxx
#     - yyy                                #   -lyyy
#   libpath:                               # 指定静态库所在的路径（相对于该组件路径）
#     - libs                               #   -Llibs
build_config:
  cxxflag: ' -Wall -O2 '
  include:
    - include
  internal_include:
    - src
    - include/amrwb

# source_file:                             # <可选项> 指定参与编译的源代码文件，支持通配符，采用相对路径
#   - src/*.c                              # 例：组件 src 目录下所有的扩展名为 c 的源代码文件
source_file:
  - "src/highpass_400hz_at_12k8.cpp"
  - "src/low_pass_filt_7k.cpp"
  - "src/interpolate_isp.cpp"
  - "src/isp_az.cpp"
  - "src/get_amr_wb_bits.cpp"
  - "src/isf_extrapolation.cpp"
  - "src/qpisf_2s.cpp"
  - "src/dec_alg_codebook.cpp"
  - "src/pvamrwbdecoder.cpp"
  - "src/synthesis_amr_wb.cpp"
  - "src/weight_amrwb_lpc.cpp"
  - "src/median5.cpp"
  - "src/qisf_ns.cpp"
  - "src/wb_syn_filt.cpp"
  - "src/q_gain2_tab.cpp"
  - "src/pit_shrp.cpp"
  - "src/highpass_50hz_at_12k8.cpp"
  - "src/qpisf_2s_tab.cpp"
  - "src/dec_acelp_4p_in_64.cpp"
  - "src/normalize_amr_wb.cpp"
  - "src/scale_signal.cpp"
  - "src/isp_isf.cpp"
  - "src/oversamp_12k8_to_16k.cpp"
  - "src/lagconceal.cpp"
  - "src/dec_acelp_2p_in_64.cpp"
  - "src/homing_amr_wb_dec.cpp"
  - "src/pvamrwb_math_op.cpp"
  - "src/phase_dispersion.cpp"
  - "src/mime_io.cpp"
  - "src/pred_lt4.cpp"
  - "src/preemph_amrwb_dec.cpp"
  - "src/qisf_ns_tab.cpp"
  - "src/voice_factor.cpp"
  - "src/dec_gain2_amr_wb.cpp"
  - "src/agc2_amr_wb.cpp"
  - "src/band_pass_6k_7k.cpp"
  - "src/deemphasis_32.cpp"
  - "src/dtx_decoder_amr_wb.cpp"
  - "src/noise_gen_amrwb.cpp"

## 第五部分：配置信息
# def_config:                              # 组件的可配置项
#   CONFIG_DEBUG: y
#   CONFIG_PARAM_NOT_CHECK: y
#   CONFIG_CLI: y

## 第六部分：安装信息
# install:
#   - dest: include/                       # 安装的目的路径 dest是相对路径，通常是相对于YoC SDK 安装目录
#     source:                              # 安装源列表
#      - src/*.h                           # 支持通配符，相对路径
install:
  - dest: "include/amrwb"
    source:
      - "include/amrwb/*.h"

## 第七部分：导出部分
# export:
#   - dest: "<SOLUTION_PATH>/generated/data" # 安装的目的路径 dest是相对路径
#     source:                                # 安装源列表
#       - "bootimgs/boot"
#       - "bootimgs/tee"
#       - "bootimgs/mtb"
#       - "configs/config.yaml"
