
## 第一部分： 基础信息
name: chip_bl606p                                  # <必选项> 包名称 （符合C语言变量命名规则），长度少于等于64字节
version: v7.9.1                                   # <必选项> 组件版本号
description: driver & sdk for platform/mcu bl606p chip         # <必选项> 建议至少20字以上
type: chip                                         # <必选项> 组件类型，为：solution, chip, board, common, sdk

tag: 核心模块                                       # <可选项> 组件分类，缺省值： ''
keywords:                                           # <可选项> 标签，会影响到组件被搜索的效果，合理的标签很重要
  - base
license: Apache license v2.0                        # <可选项> 源代码的许可证，要确保所有代码、文件的许可证不冲突。如：MIT，Apache license v2.0，BSD

#           指定该组件依赖的组件及版本，版本支持条件比较，支持：>=v1.0, >v1.0, ==v1.0, <=v1.0, <v1.0, v1.0
#           未指定条件时，默认为 ==，如 v1.0 与 ==v1.0
# depends:                                 # <可选项> 该组件依赖其他的组件，合理的依赖才能保证组件能编译、使用
#   - minilibc: v7.2.0
#   - aos: >=v7.2.0

hw_info:
  cpu0:
    arch_name: riscv
    cpu_name: c906fdv
    toolchain_prefix: riscv64-unknown-elf
    vendor_name: xuantie
    ld_script: gcc_flash_c906.ld
    flash_program: bl606p_flasher.elf
  cpu1:
    arch_name: riscv
    vendor_name: xuantie
    cpu_name: e907fp
    ld_script: gcc_flash_e907.ld
    flash_program: bl606p_flasher.elf
    toolchain_prefix: riscv64-unknown-elf
  cpu2:
    arch_name: riscv
    vendor_name: xuantie
    cpu_name: e902m
    ld_script: gcc_flash_e902.ld
    flash_program: xxxx
    toolchain_prefix: riscv64-unknown-elf

## 第四部分：编译连接信息
# build_config:                            # <可选项> 编译配置项
#   include:                               # <可选项> 编译时，影响编译器的-I 参数 ,全局有效
#     - src                                #        include 只能是该软件包下的目录，不能使用外部目录
#   internal_include:                      # <可选项> 编译时，影响编译器的-I 参数 ,组件内有效
#     - include
#   cflag: ''                              # <可选项> C 编译器所需要要的编译参数
#   cxxflag: ''                            # <可选项> CXX 编译器所需要要的编译参数
#   asmflag: ''                            # <可选项> 汇编器所需要要参数
#   define:                                # <可选项> 宏定义, 增加编译器的-D 选项,如：
#     XXX: 1                               #   -DXXX=1
#     AAA: 1                               #   -DAAA
#     STR: "abc"                           #   -DSTR="abc"
#   libs:                                  # 该组件中支持的二进制静态库,如：libxxx.a, libyyy.a
#     - xxx                                #   -lxxx
#     - yyy                                #   -lyyy
#   libpath:                               # 指定静态库所在的路径（相对于该组件路径）
#     - libs                               #   -Llibs
build_config:
  libs:
    - chip_bl606p_ss
  libpath:
    - libs/<cpu>/<CONFIG_BL_LIB_SUB_PATH>
  define:
  cflag: -Wno-int-to-pointer-cast -Wno-pointer-to-int-cast -Wno-unused-function -fno-jump-tables
  cxxflag:
  ldflag:
  asmflag: -D__ASSEMBLY__
  include:
    - include/
    - include/asm
    - drivers/blyoc_flash
    - drivers
    - drivers/blyoc_mbox
    - drivers/soc_std/bsp/regs
    - drivers/soc_std/bsp/std_drv/inc
    - drivers/soc_std/bsp/startup/m0/source
    - drivers/hosal/bl606p_hal
    - drivers/hosal/include
    - utils/include
    - drivers/blyoc_flash
    - drivers/blyoc_audio
    - drivers/blyoc_ringbuffer
    - drivers/bl_usb

    - os_adapter/bl_os_adapter
    - os_adapter/bl_os_adapter/include
    - os_adapter/bl_os_adapter/include/bl_os_adapter
    - tg/include

    - blcrypto_suite/inc

    - usb_stack/class/audio
    - usb_stack/core
    - usb_stack/common
    - usb_stack

    - peripherals/include
    - peripherals/bl606p_code/bl_code
    - peripherals/bl606p_code
    - peripherals/config
    - peripherals/config/common
    - drivers/soc_std/common/soft_crc
  internal_include:
    - drivers/ll
    - drivers

    - blcrypto_suite/priv_inc

    #std_driver
    - drivers/soc_std/bsp
    - drivers/soc_std/common/misc
    - drivers/soc_std/common/misc/compiler
#   - drivers/soc_std/bsp/risc-v/Core/Include
#   - drivers/soc_std/bsp/risc-v/csi_dsp/include
#   - drivers/soc_std/bsp/risc-v

# source_file:                             # <可选项> 指定参与编译的源代码文件，支持通配符，采用相对路径
#   - src/*.c                              # 例：组件 src 目录下所有的扩展名为 c 的源代码文件

## 第五部分：配置信息
# def_config:                              # 组件的可配置项
#   CONFIG_DEBUG: y
#   CONFIG_PARAM_NOT_CHECK: y
#   CONFIG_CLI: y
def_config:
  CONFIG_PLIC_BASE: 0xE0000000
  CONFIG_BL_LIB_SUB_PATH: "/"
  CONFIG_CHIP_BL606P: 1
  HAVE_INIT_ARRAY_LD: y
  CONFIG_NON_ADDRESS_FLASH: y
  CONFIG_CSI_V2: 1
  CONFIG_CSI: "csi2"
  CONFIG_ARCH_INTERRUPTSTACK: 4096
  CONFIG_TICK_TIMER_IDX: 0
  CONFIG_TICK_USE_CORETIME: y
  BLCRYPTO_MBEDTLS_BIGNUM_MULTIPLEX: 1
  #CONFIG_USB_HS: 1
  CONFIG_USB_DCACHE_ENABLE: 1
  CONFIG_SHM_ALIGN_CACHE: 64


## 第六部分：安装信息
# install:
#   - dest: include/                       # 安装的目的路径 dest是相当路径，通常是相对于YoC SDK 安装目录
#     source:                              # 安装源列表
#      - src/*.h                           # 支持通配符，相对路径


## 第七部分：导出部分
# export:
#   - dest: "<SOLUTION_PATH>/generated/data" # 安装的目的路径 dest是相当路径
#     source:                                # 安装源列表
#       - "bootimgs/boot"
#       - "bootimgs/tee"
#       - "bootimgs/mtb"
#       - "configs/config.yaml"
