
## 第一部分： 基础信息
name: drv_wifi_bl606p                            # <必选项> 包名称 （符合C语言变量命名规则），长度少于等于64字节
version: v8.0.0                                 # <必选项> 组件版本号
description: bl606p无线网卡驱动                  # <必选项> 建议至少20字以上
type: common                                        # <必选项> 组件类型，为：solution, chip, board, common, sdk
tag: 第三方驱动                                     # <可选项> 组件分类，缺省值： ''
keywords:                                           # <可选项> 标签，会影响到组件被搜索的效果，合理的标签很重要
  - base
license: Apache license v2.0                        # <可选项> 源代码的许可证，要确保所有代码、文件的许可证不冲突。如：MIT，Apache license v2.0，BSD

## 第二部分：依赖信息
#           指定该组件依赖的组件及版本
# sdk_chip:                                # <可选项> 该组件依赖sdk组件，合理的依赖才能保证组件能编译、使用
#   - sdk_chip_csky_dummy: v7.4.0
#   - sdk_chip_riscv_dummy: v7.4.0
# depends:                                 # <可选项> 该组件依赖其他的组件，合理的依赖才能保证组件能编译、使用
#   - minilibc: v7.4.0
#   - aos: v7.4.0

## 第四部分：编译连接信息
# build_config:                            # <可选项> 编译配置项
#   include:                               # <可选项> 编译时，影响编译器的-I 参数 ,全局有效
#     - src                                #        include 只能是该软件包下的目录，不能使用外部目录
#   internal_include:                      # <可选项> 编译时，影响编译器的-I 参数 ,组件内有效
#     - include
#   cflag: ''                              # <可选项> C 编译器所需要要的编译参数
#   cxxflag: ''                            # <可选项> CXX 编译器所需要要的编译参数
#   asmflag: ''                            # <可选项> 汇编器所需要要参数
#   define:                                # <可选项> 宏定义, 增加编译器的-D 选项,如：
#     XXX: 1                               #   -DXXX=1
#     AAA: 1                               #   -DAAA
#     STR: "abc"                           #   -DSTR="abc"
#   libs:                                  # 该组件中支持的二进制静态库,如：libxxx.a, libyyy.a
#     - xxx                                #   -lxxx
#     - yyy                                #   -lyyy
#   libpath:                               # 指定静态库所在的路径（相对于该组件路径）
#     - libs                               #   -Llibs
build_config:
  include:
    - include
    - wpa_supplicant/include/bl_supplicant
    - wifi_hosal/include
    - wpa_supplicant/port/include
    - wpa_supplicant/src
    - wpa_supplicant/include
    - lwip_port
    - dns_server/include
  cflag: >
        -DBL_CHIP_NAME=\"bl606p\"

#  libs:
#    - phyrf
#    - firmware
#  libpath:
#    - libs 
# source_file:                             # <可选项> 指定参与编译的源代码文件，支持通配符，采用相对路径
#   - src/*.c                              # 例：组件 src 目录下所有的扩展名为 c 的源代码文件
source_file:
  - "bl606p_devops.c"

  - wpa_supplicant/port/os_bl.c
  - wpa_supplicant/src/ap/ap_config.c
  - wpa_supplicant/src/ap/wpa_auth_ie.c
  - wpa_supplicant/src/ap/wpa_auth_rsn_ccmp_only.c
  - wpa_supplicant/src/bl_supplicant/bl_hostap.c
  - wpa_supplicant/src/bl_supplicant/bl_wpa3.c
  - wpa_supplicant/src/bl_supplicant/bl_wpa_main.c
  - wpa_supplicant/src/bl_supplicant/bl_wpas_glue.c
  - wpa_supplicant/src/bl_supplicant/bl_wps.c
  - wpa_supplicant/src/common/sae.c
  - wpa_supplicant/src/common/wpa_common.c
  - wpa_supplicant/src/crypto/aes-cbc.c
  - wpa_supplicant/src/crypto/aes-internal-bl.c
  - wpa_supplicant/src/crypto/aes-omac1.c
  - wpa_supplicant/src/crypto/aes-unwrap.c
  - wpa_supplicant/src/crypto/aes-wrap.c
  - wpa_supplicant/src/crypto/crypto_internal-modexp.c
  - wpa_supplicant/src/crypto/dh_group5.c
  - wpa_supplicant/src/crypto/dh_groups.c
  - wpa_supplicant/src/crypto/md5-internal.c
  - wpa_supplicant/src/crypto/md5.c
  - wpa_supplicant/src/crypto/rc4.c
  - wpa_supplicant/src/crypto/sha1-internal.c
  - wpa_supplicant/src/crypto/sha1-pbkdf2.c
  - wpa_supplicant/src/crypto/sha1.c
  - wpa_supplicant/src/crypto/sha256-internal.c
  - wpa_supplicant/src/crypto/sha256-prf.c
  - wpa_supplicant/src/crypto/sha256.c
  - wpa_supplicant/src/eap_peer/eap_common.c
  - wpa_supplicant/src/rsn_supp/pmksa_cache.c
  - wpa_supplicant/src/rsn_supp/wpa.c
  - wpa_supplicant/src/rsn_supp/wpa_ie.c
  - wpa_supplicant/src/utils/common.c
  - wpa_supplicant/src/utils/wpa_debug.c
  - wpa_supplicant/src/utils/wpabuf.c
  - wpa_supplicant/src/wps/wps.c
  - wpa_supplicant/src/wps/wps_attr_build.c
  - wpa_supplicant/src/wps/wps_attr_parse.c
  - wpa_supplicant/src/wps/wps_attr_process.c
  - wpa_supplicant/src/wps/wps_common.c
  - wpa_supplicant/src/wps/wps_dev_attr.c
  - wpa_supplicant/src/wps/wps_enrollee.c
  - wpa_supplicant/src/wps/wps_registrar.c
  - wpa_supplicant/src/wps/wps_validate.c
  # - wpa_supplicant/test/test_crypto-bl.c
  - wifi_hosal/port/wifi_hosal_bl606p.c ? <CONFIG_CPU_XUANTIE_E907FP>
  - wifi_hosal/wifi_hosal.c ? <CONFIG_CPU_XUANTIE_E907FP>
  - lwip_port/dhcp_server_raw.c ? <CONFIG_CPU_XUANTIE_E907FP>
  - dns_server/src/dns_server.c ? <CONFIG_CPU_XUANTIE_E907FP>
  - dns_server/src/web_server.c ? <CONFIG_CPU_XUANTIE_E907FP>
## 第五部分：配置信息
# def_config:                              # 组件的可配置项
#   CONFIG_DEBUG: y
#   CONFIG_PARAM_NOT_CHECK: y
#   CONFIG_CLI: y
def_config:
  CONFIG_WIFI_DRIVER_BL606P: 1
  CFG_TXDESC : 4 
  CFG_STA_MAX : 3
## 第六部分：安装信息
# install:
#   - dest: include/                       # 安装的目的路径 dest是相对路径，通常是相对于YoC SDK 安装目录
#     source:                              # 安装源列表
#      - src/*.h                           # 支持通配符，相对路径
install:
  - dest: "include/devices"
    source:
      - "include/devices/*.h"

## 第七部分：导出部分
# export:
#   - dest: "<SOLUTION_PATH>/generated/data" # 安装的目的路径 dest是相对路径
#     source:                                # 安装源列表
#       - "bootimgs/boot"
#       - "bootimgs/tee"
#       - "bootimgs/mtb"
#       - "configs/config.yaml"
